const express = require('express');
const Occasion = require('../models/Occasion');
const { auth, adminOnly } = require('../middleware/auth');

const router = express.Router();

// @route   GET /api/occasions
// @desc    Get all occasions
// @access  Private
router.get('/', auth, async (req, res) => {
  try {
    const occasions = await Occasion.find({ isActive: true }).sort({ name: 1 });
    res.json(occasions);
  } catch (error) {
    console.error('Get occasions error:', error);
    res.status(500).json({ message: 'Server error' });
  }
});

// @route   POST /api/occasions
// @desc    Create new occasion (admin only)
// @access  Private (Admin)
router.post('/', auth, adminOnly, async (req, res) => {
  try {
    const { name, code } = req.body;

    // Check if occasion already exists
    const existingOccasion = await Occasion.findOne({
      $or: [{ name }, { code }]
    });

    if (existingOccasion) {
      return res.status(400).json({ 
        message: 'Occasion with this name or code already exists' 
      });
    }

    const occasion = new Occasion({
      name,
      code: code.toUpperCase()
    });

    await occasion.save();

    res.status(201).json({
      message: 'Occasion created successfully',
      occasion
    });

  } catch (error) {
    console.error('Create occasion error:', error);
    res.status(500).json({ message: 'Server error' });
  }
});

module.exports = router;