const express = require('express');
const router = express.Router();
const mongoose = require('mongoose');
const { auth } = require('../middleware/auth');

// Simple test route
router.get('/test', (req, res) => {
  res.json({ 
    message: 'Dashboard route is working!',
    timestamp: new Date().toISOString(),
    user: req.user ? req.user.username : 'No auth'
  });
});

// Simple test route with auth
router.get('/test-auth', auth, (req, res) => {
  res.json({ 
    message: 'Dashboard auth route is working!',
    user: req.user.username,
    role: req.user.role,
    branchCode: req.user.branchCode
  });
});

// Database connection test
router.get('/test-db', auth, async (req, res) => {
  try {
    const connectionState = mongoose.connection.readyState;
    const dbName = mongoose.connection.db?.databaseName;
    
    res.json({
      message: 'Database test',
      connectionState,
      dbName,
      isConnected: connectionState === 1
    });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// Basic metrics endpoint
router.get('/metrics', auth, async (req, res) => {
  try {
    res.json({
      totalOrders: 0,
      totalBoxes: 0,
      totalCustomers: 0,
      totalRevenue: 0,
      message: 'This is a basic response - collections might not exist yet'
    });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

module.exports = router;